From e385764a9cc82c90130c2f44494058fcb2f97ea1 Mon Sep 17 00:00:00 2001
From: Shilpa Anand <shilpaproffession@gmail.com>
Date: Wed, 24 Jun 2020 12:51:57 +0530
Subject: [PATCH] Create Patch File

---
 src/DataManipulator.ts | 32 +++++++++++++++++++++++---------
 src/Graph.tsx          | 15 +++++++++++++--
 2 files changed, 36 insertions(+), 11 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..1453dfc 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -4,17 +4,31 @@ export interface Row {
   stock: string,
   top_ask_price: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
-  }
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    // updated
+    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upper_bound = 1 + 0.05;
+    const lower_bound = 1 - 0.05;
+    return{
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ? 
+        serverRespond[0].timestamp : serverRespond[1].timestamp,
+        upper_bound: upper_bound,
+        lower_bound: lower_bound,
+        trigger_alert: (ratio > upper_bound || ratio < lower_bound) ? ratio: undefined,
+    
+  };
+}
+
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..0ad69d6 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -13,6 +13,7 @@ interface PerspectiveViewerElement extends HTMLElement {
 }
 class Graph extends Component<IProps, {}> {
   table: Table | undefined;
+  props: any;
 
   render() {
     return React.createElement('perspective-viewer');
@@ -27,6 +28,11 @@ class Graph extends Component<IProps, {}> {
       top_ask_price: 'float',
       top_bid_price: 'float',
       timestamp: 'date',
+      // update
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
+
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -44,15 +50,20 @@ class Graph extends Component<IProps, {}> {
         top_ask_price: 'avg',
         top_bid_price: 'avg',
         timestamp: 'distinct count',
+        // Changes seen
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      // updated
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.27.0.windows.1

